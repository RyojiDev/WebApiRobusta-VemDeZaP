// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VemDeZap.Infra.Repositories.Base;

namespace VemDeZap.Infra.Migrations
{
    [DbContext(typeof(VemDeZapContext))]
    partial class VemDeZapContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VemDeZap.Domain.Entities.Campaign", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("IdUsuario");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Campaign");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("IdUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int>("Niche");

                    b.Property<int>("Phone")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("IdUser");

                    b.Property<string>("Name")
                        .HasMaxLength(150);

                    b.Property<int>("Niche");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entities.Send", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("IdCampaign");

                    b.Property<Guid?>("IdContact");

                    b.Property<Guid?>("IdGroup");

                    b.Property<bool>("Sent");

                    b.HasKey("Id");

                    b.HasIndex("IdCampaign");

                    b.HasIndex("IdContact");

                    b.HasIndex("IdGroup");

                    b.ToTable("Send");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DateRegister");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entities.Campaign", b =>
                {
                    b.HasOne("VemDeZap.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUsuario");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entities.Contact", b =>
                {
                    b.HasOne("VemDeZap.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entities.Group", b =>
                {
                    b.HasOne("VemDeZap.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entities.Send", b =>
                {
                    b.HasOne("VemDeZap.Domain.Entities.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("IdCampaign");

                    b.HasOne("VemDeZap.Domain.Entities.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("IdContact");

                    b.HasOne("VemDeZap.Domain.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("IdGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
